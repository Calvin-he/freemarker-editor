/**
 * generated by Xtext
 */
package org.github.validation;

import org.eclipse.xtext.validation.Check;
import org.github.freemarkerEditor.CloseTag;
import org.github.freemarkerEditor.OpenTag;
import org.github.freemarkerEditor.Tag;
import org.github.validation.AbstractFreemarkerEditorValidator;

/**
 * Custom validation rules.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
@SuppressWarnings("all")
public class FreemarkerEditorValidator extends AbstractFreemarkerEditorValidator {
  @Check
  public void checkTagMatching(final Tag t) {
    CloseTag _closeTag = t.getCloseTag();
    String _content = _closeTag.getContent();
    final String tag = _content.trim();
    OpenTag _openTag = t.getOpenTag();
    String _content_1 = _openTag.getContent();
    String _trim = _content_1.trim();
    boolean _startsWith = _trim.startsWith(tag);
    boolean _not = (!_startsWith);
    if (_not) {
      CloseTag _closeTag_1 = t.getCloseTag();
      this.error("This closing tag is not matching the opening tag.", _closeTag_1, null);
    }
  }
}
