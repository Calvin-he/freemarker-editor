/*
* generated by Xtext
*/
grammar InternalFreemarkerEditor;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.github.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.github.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.github.services.FreemarkerEditorGrammarAccess;

}

@parser::members {

 	private FreemarkerEditorGrammarAccess grammarAccess;
 	
    public InternalFreemarkerEditorParser(TokenStream input, FreemarkerEditorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Freemarker";	
   	}
   	
   	@Override
   	protected FreemarkerEditorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleFreemarker
entryRuleFreemarker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFreemarkerRule()); }
	 iv_ruleFreemarker=ruleFreemarker 
	 { $current=$iv_ruleFreemarker.current; } 
	 EOF 
;

// Rule Freemarker
ruleFreemarker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getFreemarkerAccess().getElementsElementParserRuleCall_0()); 
	    }
		lv_elements_0_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFreemarkerRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_0_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	 iv_ruleElement=ruleElement 
	 { $current=$iv_ruleElement.current; } 
	 EOF 
;

// Rule Element
ruleElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getElementAccess().getPrintParserRuleCall_0()); 
    }
    this_Print_0=rulePrint
    { 
        $current = $this_Print_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getCommentParserRuleCall_1()); 
    }
    this_Comment_1=ruleComment
    { 
        $current = $this_Comment_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getTagParserRuleCall_2()); 
    }
    this_Tag_2=ruleTag
    { 
        $current = $this_Tag_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getElementAccess().getTextParserRuleCall_3()); 
    }
    this_Text_3=ruleText
    { 
        $current = $this_Text_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePrint
entryRulePrint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrintRule()); }
	 iv_rulePrint=rulePrint 
	 { $current=$iv_rulePrint.current; } 
	 EOF 
;

// Rule Print
rulePrint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_PRINT_START_0=RULE_PRINT_START
    { 
    newLeafNode(this_PRINT_START_0, grammarAccess.getPrintAccess().getPRINT_STARTTerminalRuleCall_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrintAccess().getExpressionPrintContentParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=rulePrintContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrintRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"PrintContent");
	        afterParserOrEnumRuleCall();
	    }

)
)this_PRINT_END_2=RULE_PRINT_END
    { 
    newLeafNode(this_PRINT_END_2, grammarAccess.getPrintAccess().getPRINT_ENDTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRulePrintContent
entryRulePrintContent returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrintContentRule()); } 
	 iv_rulePrintContent=rulePrintContent 
	 { $current=$iv_rulePrintContent.current.getText(); }  
	 EOF 
;

// Rule PrintContent
rulePrintContent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_CHAR_0=RULE_CHAR    {
		$current.merge(this_CHAR_0);
    }

    { 
    newLeafNode(this_CHAR_0, grammarAccess.getPrintContentAccess().getCHARTerminalRuleCall_0()); 
    }

    |    this_COMMENT_OPEN_1=RULE_COMMENT_OPEN    {
		$current.merge(this_COMMENT_OPEN_1);
    }

    { 
    newLeafNode(this_COMMENT_OPEN_1, grammarAccess.getPrintContentAccess().getCOMMENT_OPENTerminalRuleCall_1()); 
    }

    |    this_COMMENT_CLOSE_2=RULE_COMMENT_CLOSE    {
		$current.merge(this_COMMENT_CLOSE_2);
    }

    { 
    newLeafNode(this_COMMENT_CLOSE_2, grammarAccess.getPrintContentAccess().getCOMMENT_CLOSETerminalRuleCall_2()); 
    }

    |    this_TAG_OPEN_START_3=RULE_TAG_OPEN_START    {
		$current.merge(this_TAG_OPEN_START_3);
    }

    { 
    newLeafNode(this_TAG_OPEN_START_3, grammarAccess.getPrintContentAccess().getTAG_OPEN_STARTTerminalRuleCall_3()); 
    }

    |    this_TAG_CLOSE_START_4=RULE_TAG_CLOSE_START    {
		$current.merge(this_TAG_CLOSE_START_4);
    }

    { 
    newLeafNode(this_TAG_CLOSE_START_4, grammarAccess.getPrintContentAccess().getTAG_CLOSE_STARTTerminalRuleCall_4()); 
    }

    |    this_PRINT_START_5=RULE_PRINT_START    {
		$current.merge(this_PRINT_START_5);
    }

    { 
    newLeafNode(this_PRINT_START_5, grammarAccess.getPrintContentAccess().getPRINT_STARTTerminalRuleCall_5()); 
    }

    |    this_TAG_END_6=RULE_TAG_END    {
		$current.merge(this_TAG_END_6);
    }

    { 
    newLeafNode(this_TAG_END_6, grammarAccess.getPrintContentAccess().getTAG_ENDTerminalRuleCall_6()); 
    }
)+
    ;





// Entry rule entryRuleTag
entryRuleTag returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTagRule()); }
	 iv_ruleTag=ruleTag 
	 { $current=$iv_ruleTag.current; } 
	 EOF 
;

// Rule Tag
ruleTag returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTagAccess().getOpenTagOpenTagParserRuleCall_0_0()); 
	    }
		lv_openTag_0_0=ruleOpenTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTagRule());
	        }
       		set(
       			$current, 
       			"openTag",
        		lv_openTag_0_0, 
        		"OpenTag");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTagAccess().getElementsElementParserRuleCall_1_0()); 
	    }
		lv_elements_1_0=ruleElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTagRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_1_0, 
        		"Element");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTagAccess().getCloseTagCloseTagParserRuleCall_2_0()); 
	    }
		lv_closeTag_2_0=ruleCloseTag		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTagRule());
	        }
       		set(
       			$current, 
       			"closeTag",
        		lv_closeTag_2_0, 
        		"CloseTag");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleOpenTag
entryRuleOpenTag returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpenTagRule()); }
	 iv_ruleOpenTag=ruleOpenTag 
	 { $current=$iv_ruleOpenTag.current; } 
	 EOF 
;

// Rule OpenTag
ruleOpenTag returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_TAG_OPEN_START_0=RULE_TAG_OPEN_START
    { 
    newLeafNode(this_TAG_OPEN_START_0, grammarAccess.getOpenTagAccess().getTAG_OPEN_STARTTerminalRuleCall_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpenTagAccess().getContentTagContentParserRuleCall_1_0()); 
	    }
		lv_content_1_0=ruleTagContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpenTagRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_1_0, 
        		"TagContent");
	        afterParserOrEnumRuleCall();
	    }

)
)this_TAG_END_2=RULE_TAG_END
    { 
    newLeafNode(this_TAG_END_2, grammarAccess.getOpenTagAccess().getTAG_ENDTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleCloseTag
entryRuleCloseTag returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCloseTagRule()); }
	 iv_ruleCloseTag=ruleCloseTag 
	 { $current=$iv_ruleCloseTag.current; } 
	 EOF 
;

// Rule CloseTag
ruleCloseTag returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_TAG_CLOSE_START_0=RULE_TAG_CLOSE_START
    { 
    newLeafNode(this_TAG_CLOSE_START_0, grammarAccess.getCloseTagAccess().getTAG_CLOSE_STARTTerminalRuleCall_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCloseTagAccess().getContentTagContentParserRuleCall_1_0()); 
	    }
		lv_content_1_0=ruleTagContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCloseTagRule());
	        }
       		set(
       			$current, 
       			"content",
        		lv_content_1_0, 
        		"TagContent");
	        afterParserOrEnumRuleCall();
	    }

)
)this_TAG_END_2=RULE_TAG_END
    { 
    newLeafNode(this_TAG_END_2, grammarAccess.getCloseTagAccess().getTAG_ENDTerminalRuleCall_2()); 
    }
)
;





// Entry rule entryRuleTagContent
entryRuleTagContent returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTagContentRule()); } 
	 iv_ruleTagContent=ruleTagContent 
	 { $current=$iv_ruleTagContent.current.getText(); }  
	 EOF 
;

// Rule TagContent
ruleTagContent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_CHAR_0=RULE_CHAR    {
		$current.merge(this_CHAR_0);
    }

    { 
    newLeafNode(this_CHAR_0, grammarAccess.getTagContentAccess().getCHARTerminalRuleCall_0()); 
    }

    |    this_COMMENT_OPEN_1=RULE_COMMENT_OPEN    {
		$current.merge(this_COMMENT_OPEN_1);
    }

    { 
    newLeafNode(this_COMMENT_OPEN_1, grammarAccess.getTagContentAccess().getCOMMENT_OPENTerminalRuleCall_1()); 
    }

    |    this_COMMENT_CLOSE_2=RULE_COMMENT_CLOSE    {
		$current.merge(this_COMMENT_CLOSE_2);
    }

    { 
    newLeafNode(this_COMMENT_CLOSE_2, grammarAccess.getTagContentAccess().getCOMMENT_CLOSETerminalRuleCall_2()); 
    }

    |    this_TAG_OPEN_START_3=RULE_TAG_OPEN_START    {
		$current.merge(this_TAG_OPEN_START_3);
    }

    { 
    newLeafNode(this_TAG_OPEN_START_3, grammarAccess.getTagContentAccess().getTAG_OPEN_STARTTerminalRuleCall_3()); 
    }

    |    this_TAG_CLOSE_START_4=RULE_TAG_CLOSE_START    {
		$current.merge(this_TAG_CLOSE_START_4);
    }

    { 
    newLeafNode(this_TAG_CLOSE_START_4, grammarAccess.getTagContentAccess().getTAG_CLOSE_STARTTerminalRuleCall_4()); 
    }

    |    this_PRINT_START_5=RULE_PRINT_START    {
		$current.merge(this_PRINT_START_5);
    }

    { 
    newLeafNode(this_PRINT_START_5, grammarAccess.getTagContentAccess().getPRINT_STARTTerminalRuleCall_5()); 
    }

    |    this_PRINT_END_6=RULE_PRINT_END    {
		$current.merge(this_PRINT_END_6);
    }

    { 
    newLeafNode(this_PRINT_END_6, grammarAccess.getTagContentAccess().getPRINT_ENDTerminalRuleCall_6()); 
    }
)+
    ;





// Entry rule entryRuleText
entryRuleText returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	 iv_ruleText=ruleText 
	 { $current=$iv_ruleText.current; } 
	 EOF 
;

// Rule Text
ruleText returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getTextAccess().getTextTextContentParserRuleCall_0()); 
	    }
		lv_text_0_0=ruleTextContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextRule());
	        }
       		set(
       			$current, 
       			"text",
        		lv_text_0_0, 
        		"TextContent");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleTextContent
entryRuleTextContent returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTextContentRule()); } 
	 iv_ruleTextContent=ruleTextContent 
	 { $current=$iv_ruleTextContent.current.getText(); }  
	 EOF 
;

// Rule TextContent
ruleTextContent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((( RULE_CHAR
    | RULE_COMMENT_CLOSE
    | RULE_PRINT_END
    | RULE_TAG_END))=>(    this_CHAR_0=RULE_CHAR    {
		$current.merge(this_CHAR_0);
    }

    { 
    newLeafNode(this_CHAR_0, grammarAccess.getTextContentAccess().getCHARTerminalRuleCall_0_0()); 
    }

    |    this_COMMENT_CLOSE_1=RULE_COMMENT_CLOSE    {
		$current.merge(this_COMMENT_CLOSE_1);
    }

    { 
    newLeafNode(this_COMMENT_CLOSE_1, grammarAccess.getTextContentAccess().getCOMMENT_CLOSETerminalRuleCall_0_1()); 
    }

    |    this_PRINT_END_2=RULE_PRINT_END    {
		$current.merge(this_PRINT_END_2);
    }

    { 
    newLeafNode(this_PRINT_END_2, grammarAccess.getTextContentAccess().getPRINT_ENDTerminalRuleCall_0_2()); 
    }

    |    this_TAG_END_3=RULE_TAG_END    {
		$current.merge(this_TAG_END_3);
    }

    { 
    newLeafNode(this_TAG_END_3, grammarAccess.getTextContentAccess().getTAG_ENDTerminalRuleCall_0_3()); 
    }
))+
    ;





// Entry rule entryRuleComment
entryRuleComment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommentRule()); }
	 iv_ruleComment=ruleComment 
	 { $current=$iv_ruleComment.current; } 
	 EOF 
;

// Rule Comment
ruleComment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCommentAccess().getCommentAction_0(),
            $current);
    }
)this_COMMENT_OPEN_1=RULE_COMMENT_OPEN
    { 
    newLeafNode(this_COMMENT_OPEN_1, grammarAccess.getCommentAccess().getCOMMENT_OPENTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommentAccess().getTextCommentContentParserRuleCall_2_0()); 
	    }
		lv_text_2_0=ruleCommentContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommentRule());
	        }
       		set(
       			$current, 
       			"text",
        		lv_text_2_0, 
        		"CommentContent");
	        afterParserOrEnumRuleCall();
	    }

)
)this_COMMENT_CLOSE_3=RULE_COMMENT_CLOSE
    { 
    newLeafNode(this_COMMENT_CLOSE_3, grammarAccess.getCommentAccess().getCOMMENT_CLOSETerminalRuleCall_3()); 
    }
)
;





// Entry rule entryRuleCommentContent
entryRuleCommentContent returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommentContentRule()); } 
	 iv_ruleCommentContent=ruleCommentContent 
	 { $current=$iv_ruleCommentContent.current.getText(); }  
	 EOF 
;

// Rule CommentContent
ruleCommentContent returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_CHAR_0=RULE_CHAR    {
		$current.merge(this_CHAR_0);
    }

    { 
    newLeafNode(this_CHAR_0, grammarAccess.getCommentContentAccess().getCHARTerminalRuleCall_0()); 
    }

    |    this_COMMENT_OPEN_1=RULE_COMMENT_OPEN    {
		$current.merge(this_COMMENT_OPEN_1);
    }

    { 
    newLeafNode(this_COMMENT_OPEN_1, grammarAccess.getCommentContentAccess().getCOMMENT_OPENTerminalRuleCall_1()); 
    }

    |    this_TAG_OPEN_START_2=RULE_TAG_OPEN_START    {
		$current.merge(this_TAG_OPEN_START_2);
    }

    { 
    newLeafNode(this_TAG_OPEN_START_2, grammarAccess.getCommentContentAccess().getTAG_OPEN_STARTTerminalRuleCall_2()); 
    }

    |    this_TAG_CLOSE_START_3=RULE_TAG_CLOSE_START    {
		$current.merge(this_TAG_CLOSE_START_3);
    }

    { 
    newLeafNode(this_TAG_CLOSE_START_3, grammarAccess.getCommentContentAccess().getTAG_CLOSE_STARTTerminalRuleCall_3()); 
    }

    |    this_PRINT_START_4=RULE_PRINT_START    {
		$current.merge(this_PRINT_START_4);
    }

    { 
    newLeafNode(this_PRINT_START_4, grammarAccess.getCommentContentAccess().getPRINT_STARTTerminalRuleCall_4()); 
    }

    |    this_PRINT_END_5=RULE_PRINT_END    {
		$current.merge(this_PRINT_END_5);
    }

    { 
    newLeafNode(this_PRINT_END_5, grammarAccess.getCommentContentAccess().getPRINT_ENDTerminalRuleCall_5()); 
    }

    |    this_TAG_END_6=RULE_TAG_END    {
		$current.merge(this_TAG_END_6);
    }

    { 
    newLeafNode(this_TAG_END_6, grammarAccess.getCommentContentAccess().getTAG_ENDTerminalRuleCall_6()); 
    }
)*
    ;





RULE_COMMENT_OPEN : '<#--';

RULE_COMMENT_CLOSE : '-->';

RULE_TAG_OPEN_START : '<#';

RULE_TAG_CLOSE_START : '</#';

RULE_TAG_END : '>';

RULE_PRINT_START : '${';

RULE_PRINT_END : '}';

RULE_CHAR : ('--'|'</'|~((RULE_COMMENT_OPEN|RULE_COMMENT_CLOSE|RULE_TAG_OPEN_START|RULE_TAG_CLOSE_START|RULE_PRINT_START|RULE_PRINT_END|RULE_TAG_END)));


